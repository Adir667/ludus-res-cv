# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.response_times import ResponseTimes  # noqa: F401,E501
from swagger_server import util


class Analysis(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, fps: float=None, response_times: ResponseTimes=None):  # noqa: E501
        """Analysis - a model defined in Swagger

        :param fps: The fps of this Analysis.  # noqa: E501
        :type fps: float
        :param response_times: The response_times of this Analysis.  # noqa: E501
        :type response_times: ResponseTimes
        """
        self.swagger_types = {
            'fps': float,
            'response_times': ResponseTimes
        }

        self.attribute_map = {
            'fps': 'fps',
            'response_times': 'response_times'
        }
        self._fps = fps
        self._response_times = response_times

    @classmethod
    def from_dict(cls, dikt) -> 'Analysis':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Analysis of this Analysis.  # noqa: E501
        :rtype: Analysis
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fps(self) -> float:
        """Gets the fps of this Analysis.


        :return: The fps of this Analysis.
        :rtype: float
        """
        return self._fps

    @fps.setter
    def fps(self, fps: float):
        """Sets the fps of this Analysis.


        :param fps: The fps of this Analysis.
        :type fps: float
        """

        self._fps = fps

    @property
    def response_times(self) -> ResponseTimes:
        """Gets the response_times of this Analysis.


        :return: The response_times of this Analysis.
        :rtype: ResponseTimes
        """
        return self._response_times

    @response_times.setter
    def response_times(self, response_times: ResponseTimes):
        """Sets the response_times of this Analysis.


        :param response_times: The response_times of this Analysis.
        :type response_times: ResponseTimes
        """

        self._response_times = response_times
